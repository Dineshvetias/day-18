#include <stdlib.h>

int** transpose(int** matrix, int matrixSize, int* matrixColSize, int* returnSize, int** returnColumnSizes) {
    int m = matrixSize;         // rows in input
    int n = matrixColSize[0];   // columns in input

    // Allocate memory for the transposed matrix (size: n x m)
    int** result = (int**)malloc(n * sizeof(int*));
    *returnColumnSizes = (int*)malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) {
        result[i] = (int*)malloc(m * sizeof(int));  // each new row has m columns
        (*returnColumnSizes)[i] = m;
    }

    // Transpose the matrix: swap indices
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            result[j][i] = matrix[i][j];
        }
    }

    *returnSize = n;  // result has n rows
    return result;
}
